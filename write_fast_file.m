function write_fast_file(in_file, fast_dir)

fid = fopen([fast_dir filesep fast_dir], 'w+');

%% Variables
dt = '   0.0125';


fprintf(fid,'--------------------------------------------------------------------------------\n');
fprintf(fid,'------- FAST INPUT FILE --------------------------------------------------------\n');
fprintf(fid,'Sample 5.0 MW Baseline Wind Turbine for Use in Offshore Analysis.\n');
fprintf(fid,'Properties from Dutch Offshore Wind Energy Converter (DOWEC) 6MW Pre-Design (10046_009.pdf) and REpower 5M 5MW (5m_uk.pdf); Compatible with FAST v6.1.\n');
fprintf(fid,'---------------------- SIMULATION CONTROL --------------------------------------\n');
fprintf(fid,'False       Echo        - Echo input data to "echo.out" (flag)\n');
fprintf(fid,'   1        ADAMSPrep   - ADAMS preprocessor mode {1: Run FAST, 2: use FAST as a preprocessor to create an ADAMS model, 3: do both} (switch)\n');
fprintf(fid,'   1        AnalMode    - Analysis mode {1: Run a time-marching simulation, 2: create a periodic linearized model} (switch)\n');
fprintf(fid,'   3        NumBl       - Number of blades (-)\n');
fprintf(fid,' 63.0      TMax        - Total run time (s)\n');
fprintf(fid,[dt '   DT          - Integration time step (s)\n']);
fprintf(fid,'---------------------- TURBINE CONTROL -----------------------------------------\n');
fprintf(fid,'   0        YCMode      - Yaw control mode {0: none, 1: user-defined from routine UserYawCont, 2: user-defined from Simulink} (switch)\n');
fprintf(fid,'   0.0      TYCOn       - Time to enable active yaw control (s) [unused when YCMode=0]\n');
fprintf(fid,'   0        PCMode      - Pitch control mode {0: none, 1: user-defined from routine PitchCntrl, 2: user-defined from Simulink} (switch)\n');
fprintf(fid,'   0.0      TPCOn       - Time to enable active pitch control (s) [unused when PCMode=0]\n');
fprintf(fid,'   0        VSContrl    - Variable-speed control mode {0: none, 1: simple VS, 2: user-defined from routine UserVSCont, 3: user-defined from Simulink} (switch)\n');
fprintf(fid,'9999.9      VS_RtGnSp   - Rated generator speed for simple variable-speed generator control (HSS side) (rpm) [used only when VSContrl=1]\n');
fprintf(fid,'9999.9      VS_RtTq     - Rated generator torque/constant generator torque in Region 3 for simple variable-speed generator control (HSS side) (N-m) [used only when VSContrl=1]\n');
fprintf(fid,'9999.9      VS_Rgn2K    - Generator torque constant in Region 2 for simple variable-speed generator control (HSS side) (N-m/rpm^2) [used only when VSContrl=1]\n');
fprintf(fid,'9999.9      VS_SlPc     - Rated generator slip percentage in Region 2 1/2 for simple variable-speed generator control (%) [used only when VSContrl=1]\n');
fprintf(fid,'   1        GenModel    - Generator model {1: simple, 2: Thevenin, 3: user-defined from routine UserGen} (switch) [used only when VSContrl=0]\n');
fprintf(fid,'True        GenTiStr    - Method to start the generator {T: timed using TimGenOn, F: generator speed using SpdGenOn} (flag)\n');
fprintf(fid,'True        GenTiStp    - Method to stop the generator {T: timed using TimGenOf, F: when generator power = 0} (flag)\n');
fprintf(fid,'9999.9      SpdGenOn    - Generator speed to turn on the generator for a startup (HSS speed) (rpm) [used only when GenTiStr=False]\n');
fprintf(fid,'   0.0      TimGenOn    - Time to turn on the generator for a startup (s) [used only when GenTiStr=True]\n');
fprintf(fid,'9999.9      TimGenOf    - Time to turn off the generator (s) [used only when GenTiStp=True]\n');
fprintf(fid,'   1        HSSBrMode   - HSS brake model {1: simple, 2: user-defined from routine UserHSSBr} (switch)\n');
fprintf(fid,'9999.9      THSSBrDp    - Time to initiate deployment of the HSS brake (s)\n');
fprintf(fid,'9999.9      TiDynBrk    - Time to initiate deployment of the dynamic generator brake [CURRENTLY IGNORED] (s)\n');
fprintf(fid,'9999.9      TTpBrDp(1)  - Time to initiate deployment of tip brake 1 (s)\n');
fprintf(fid,'9999.9      TTpBrDp(2)  - Time to initiate deployment of tip brake 2 (s)\n');
fprintf(fid,'9999.9      TTpBrDp(3)  - Time to initiate deployment of tip brake 3 (s) [unused for 2 blades]\n');
fprintf(fid,'9999.9      TBDepISp(1) - Deployment-initiation speed for the tip brake on blade 1 (rpm)\n');
fprintf(fid,'9999.9      TBDepISp(2) - Deployment-initiation speed for the tip brake on blade 2 (rpm)\n');
fprintf(fid,'9999.9      TBDepISp(3) - Deployment-initiation speed for the tip brake on blade 3 (rpm) [unused for 2 blades]\n');
fprintf(fid,'9999.9      TYawManS    - Time to start override yaw maneuver and end standard yaw control (s)\n');
fprintf(fid,'9999.9      TYawManE    - Time at which override yaw maneuver reaches final yaw angle (s)\n');
fprintf(fid,'   0.0      NacYawF     - Final yaw angle for override yaw maneuvers (degrees)\n');
fprintf(fid,'9999.9      TPitManS(1) - Time to start override pitch maneuver for blade 1 and end standard pitch control (s)\n');
fprintf(fid,'9999.9      TPitManS(2) - Time to start override pitch maneuver for blade 2 and end standard pitch control (s)\n');
fprintf(fid,'9999.9      TPitManS(3) - Time to start override pitch maneuver for blade 3 and end standard pitch control (s) [unused for 2 blades]\n');
fprintf(fid,'9999.9      TPitManE(1) - Time at which override pitch maneuver for blade 1 reaches final pitch (s)\n');
fprintf(fid,'9999.9      TPitManE(2) - Time at which override pitch maneuver for blade 2 reaches final pitch (s)\n');
fprintf(fid,'9999.9      TPitManE(3) - Time at which override pitch maneuver for blade 3 reaches final pitch (s) [unused for 2 blades]\n');
fprintf(fid,'  -2.0      BlPitch(1)  - Blade 1 initial pitch (degrees)\n');
fprintf(fid,'  -2.0      BlPitch(2)  - Blade 2 initial pitch (degrees)\n');
fprintf(fid,'  -2.0      BlPitch(3)  - Blade 3 initial pitch (degrees) [unused for 2 blades]\n');
fprintf(fid,'   0.0      B1PitchF(1) - Blade 1 final pitch for pitch maneuvers (degrees)\n');
fprintf(fid,'   0.0      B1PitchF(2) - Blade 2 final pitch for pitch maneuvers (degrees)\n');
fprintf(fid,'   0.0      B1PitchF(3) - Blade 3 final pitch for pitch maneuvers (degrees) [unused for 2 blades]\n');
fprintf(fid,'---------------------- ENVIRONMENTAL CONDITIONS --------------------------------\n');
fprintf(fid,'   9.80665  Gravity     - Gravitational acceleration (m/s^2)\n');
fprintf(fid,'---------------------- FEATURE FLAGS -------------------------------------------\n');
fprintf(fid,'True        FlapDOF1    - First flapwise blade mode DOF (flag)\n');
fprintf(fid,'True        FlapDOF2    - Second flapwise blade mode DOF (flag)\n');
fprintf(fid,'True        EdgeDOF     - First edgewise blade mode DOF (flag)\n');
fprintf(fid,'False       TeetDOF     - Rotor-teeter DOF (flag) [unused for 3 blades]\n');
fprintf(fid,'True        DrTrDOF     - Drivetrain rotational-flexibility DOF (flag)\n');
fprintf(fid,'True        GenDOF      - Generator DOF (flag)\n');
fprintf(fid,'True        YawDOF      - Yaw DOF (flag)\n');
fprintf(fid,'True        TwFADOF1    - First fore-aft tower bending-mode DOF (flag)\n');
fprintf(fid,'True        TwFADOF2    - Second fore-aft tower bending-mode DOF (flag)\n');
fprintf(fid,'True        TwSSDOF1    - First side-to-side tower bending-mode DOF (flag)\n');
fprintf(fid,'True        TwSSDOF2    - Second side-to-side tower bending-mode DOF (flag)\n');
fprintf(fid,'True        CompAero    - Compute aerodynamic forces (flag)\n');
fprintf(fid,'False       CompNoise   - Compute aerodynamic noise (flag)\n');
fprintf(fid,'---------------------- INITIAL CONDITIONS --------------------------------------\n');
fprintf(fid,'   0.0      OoPDefl     - Initial out-of-plane blade-tip displacement (meters)\n');
fprintf(fid,'   0.0      IPDefl      - Initial in-plane blade-tip deflection (meters)\n');
fprintf(fid,'   0.0      TeetDefl    - Initial or fixed teeter angle (degrees) [unused for 3 blades]\n');
fprintf(fid,'   0.0      Azimuth     - Initial azimuth angle for blade 1 (degrees)\n');
fprintf(fid,'  12.1      RotSpeed    - Initial or fixed rotor speed (rpm)\n');
fprintf(fid,'   0.0      NacYaw      - Initial or fixed nacelle-yaw angle (degrees)\n');
fprintf(fid,'   0.0      TTDspFA     - Initial fore-aft tower-top displacement (meters)\n');
fprintf(fid,'   0.0      TTDspSS     - Initial side-to-side tower-top displacement (meters)\n');
fprintf(fid,'---------------------- TURBINE CONFIGURATION -----------------------------------\n');
fprintf(fid,'  63.0      TipRad      - The distance from the rotor apex to the blade tip (meters)\n');
fprintf(fid,'   1.5      HubRad      - The distance from the rotor apex to the blade root (meters)\n');
fprintf(fid,'   1        PSpnElN     - Number of the innermost blade element which is still part of the pitchable portion of the blade for partial-span pitch control [1 to BldNodes] [CURRENTLY IGNORED] (-)\n');
fprintf(fid,'   0.0      UndSling    - Undersling length [distance from teeter pin to the rotor apex] (meters) [unused for 3 blades]\n');
fprintf(fid,'   0.0      HubCM       - Distance from rotor apex to hub mass [positive downwind] (meters)\n');
fprintf(fid,'  -5.01910  OverHang    - Distance from yaw axis to rotor apex [3 blades] or teeter pin [2 blades] (meters)\n');
fprintf(fid,'   1.9      NacCMxn     - Downwind distance from the tower-top to the nacelle CM (meters)\n');
fprintf(fid,'   0.0      NacCMyn     - Lateral  distance from the tower-top to the nacelle CM (meters)\n');
fprintf(fid,'   1.75     NacCMzn     - Vertical distance from the tower-top to the nacelle CM (meters)\n');
fprintf(fid,'  87.6      TowerHt     - Height of tower above ground level [onshore] or MSL [offshore] (meters)\n');
fprintf(fid,'   1.96256  Twr2Shft    - Vertical distance from the tower-top to the rotor shaft (meters)\n');
fprintf(fid,'   0.0      TwrRBHt     - Tower rigid base height (meters)\n');
fprintf(fid,'  -5.0      ShftTilt    - Rotor shaft tilt angle (degrees)\n');
fprintf(fid,'   0.0      Delta3      - Delta-3 angle for teetering rotors (degrees) [unused for 3 blades]\n');
fprintf(fid,'  -2.5      PreCone(1)  - Blade 1 cone angle (degrees)\n');
fprintf(fid,'  -2.5      PreCone(2)  - Blade 2 cone angle (degrees)\n');
fprintf(fid,'  -2.5      PreCone(3)  - Blade 3 cone angle (degrees) [unused for 2 blades]\n');
fprintf(fid,'   0.0      AzimB1Up    - Azimuth value to use for I/O when blade 1 points up (degrees)\n');
fprintf(fid,'---------------------- MASS AND INERTIA ----------------------------------------\n');
fprintf(fid,'   0.0      YawBrMass   - Yaw bearing mass (kg)\n');
fprintf(fid,' 240.00E3   NacMass     - Nacelle mass (kg)\n');
fprintf(fid,'  56.78E3   HubMass     - Hub mass (kg)\n');
fprintf(fid,'   0.0      TipMass(1)  - Tip-brake mass, blade 1 (kg)\n');
fprintf(fid,'   0.0      TipMass(2)  - Tip-brake mass, blade 2 (kg)\n');
fprintf(fid,'   0.0      TipMass(3)  - Tip-brake mass, blade 3 (kg) [unused for 2 blades]\n');
fprintf(fid,'2607.89E3   NacYIner    - Nacelle inertia about yaw axis (kg m^2)\n');
fprintf(fid,' 534.116    GenIner     - Generator inertia about HSS (kg m^2)\n');
fprintf(fid,' 115.926E3  HubIner     - Hub inertia about rotor axis [3 blades] or teeter axis [2 blades] (kg m^2)\n');
fprintf(fid,'---------------------- DRIVETRAIN ----------------------------------------------\n');
fprintf(fid,' 100.0      GBoxEff     - Gearbox efficiency (%)\n');
fprintf(fid,'  94.4      GenEff      - Generator efficiency [ignored by the Thevenin and user-defined generator models] (%)\n');
fprintf(fid,'  97.0      GBRatio     - Gearbox ratio (-)\n');
fprintf(fid,'False       GBRevers    - Gearbox reversal {T: if rotor and generator rotate in opposite directions} (flag)\n');
fprintf(fid,'  28.1162E3 HSSBrTqF    - Fully deployed HSS-brake torque (N-m)\n');
fprintf(fid,'   0.6      HSSBrDT     - Time for HSS-brake to reach full deployment once initiated (sec) [used only when HSSBrMode=1]\n');
fprintf(fid,'            DynBrkFi    - File containing a mech-gen-torque vs HSS-speed curve for a dynamic brake [CURRENTLY IGNORED] (quoted string)\n');
fprintf(fid,' 867.637E6  DTTorSpr    - Drivetrain torsional spring (N-m/rad)\n');
fprintf(fid,'   6.215E6  DTTorDmp    - Drivetrain torsional damper (N-m/(rad/s))\n');
fprintf(fid,'---------------------- SIMPLE INDUCTION GENERATOR ------------------------------\n');
fprintf(fid,'2.0      SIG_SlPc    - Rated generator slip percentage (%) [used only when VSContrl=0 and GenModel=1]\n');
fprintf(fid,'1800      SIG_SySp    - Synchronous (zero-torque) generator speed (rpm) [used only when VSContrl=0 and GenModel=1]\n');
fprintf(fid,'26526      SIG_RtTq    - Rated torque (N-m) [used only when VSContrl=0 and GenModel=1]\n');
fprintf(fid,'2.0      SIG_PORt    - Pull-out ratio (Tpullout/Trated) (-) [used only when VSContrl=0 and GenModel=1]\n');
fprintf(fid,'---------------------- THEVENIN-EQUIVALENT INDUCTION GENERATOR -----------------\n');
fprintf(fid,'9999.9      TEC_Freq    - Line frequency [50 or 60] (Hz) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9998        TEC_NPol    - Number of poles [even integer > 0] (-) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9999.9      TEC_SRes    - Stator resistance (ohms) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9999.9      TEC_RRes    - Rotor resistance (ohms) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9999.9      TEC_VLL     - Line-to-line RMS voltage (volts) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9999.9      TEC_SLR     - Stator leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9999.9      TEC_RLR     - Rotor leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'9999.9      TEC_MR      - Magnetizing reactance (ohms) [used only when VSContrl=0 and GenModel=2]\n');
fprintf(fid,'---------------------- PLATFORM ------------------------------------------------\n');
fprintf(fid,'   0        PtfmModel   - Platform model {0: none, 1: onshore, 2: fixed bottom offshore, 3: floating offshore} (switch)\n');
fprintf(fid,'"xxx.dat"   PtfmFile    - Name of file containing platform properties (quoted string) [unused when PtfmModel=0]\n');
fprintf(fid,'---------------------- TOWER ---------------------------------------------------\n');
fprintf(fid,'  20        TwrNodes    - Number of tower nodes used for analysis (-)\n');
fprintf(fid,'"Sample_Tower.dat"      TwrFile     - Name of file containing tower properties (quoted string)\n');
fprintf(fid,'---------------------- NACELLE-YAW ---------------------------------------------\n');
fprintf(fid,'9028.32E6   YawSpr      - Nacelle-yaw spring constant (N-m/rad)\n');
fprintf(fid,'  19.16E6   YawDamp     - Nacelle-yaw damping constant (N-m/(rad/s))\n');
fprintf(fid,'   0.0      YawNeut     - Neutral yaw position--yaw spring force is zero at this yaw (degrees)\n');
fprintf(fid,'---------------------- FURLING -------------------------------------------------\n');
fprintf(fid,'False       Furling     - Read in additional model properties for furling turbine (flag)\n');
fprintf(fid,'            FurlFile    - Name of file containing furling properties (quoted string) [unused when Furling=False]\n');
fprintf(fid,'---------------------- ROTOR-TEETER --------------------------------------------\n');
fprintf(fid,'   0        TeetMod     - Rotor-teeter spring/damper model {0: none, 1: standard, 2: user-defined from routine UserTeet} (switch) [unused for 3 blades]\n');
fprintf(fid,'   0.0      TeetDmpP    - Rotor-teeter damper position (degrees) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'   0.0      TeetDmp     - Rotor-teeter damping constant (N-m/(rad/s)) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'   0.0      TeetCDmp    - Rotor-teeter rate-independent Coulomb-damping moment (N-m) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'   0.0      TeetSStP    - Rotor-teeter soft-stop position (degrees) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'   0.0      TeetHStP    - Rotor-teeter hard-stop position (degrees) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'   0.0      TeetSSSp    - Rotor-teeter soft-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'   0.0      TeetHSSp    - Rotor-teeter hard-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]\n');
fprintf(fid,'---------------------- TIP-BRAKE -----------------------------------------------\n');
fprintf(fid,'   0.0      TBDrConN    - Tip-brake drag constant during normal operation, Cd*Area (m^2)\n');
fprintf(fid,'   0.0      TBDrConD    - Tip-brake drag constant during fully-deployed operation, Cd*Area (m^2)\n');
fprintf(fid,'   0.0      TpBrDT      - Time for tip-brake to reach full deployment once released (sec)\n');
fprintf(fid,'---------------------- BLADE ---------------------------------------------------\n');
fprintf(fid,'"Sample_Blade.dat"                  BldFile(1)  - Name of file containing properties for blade 1 (quoted string)\n');
fprintf(fid,'"Sample_Blade.dat"                  BldFile(2)  - Name of file containing properties for blade 2 (quoted string)\n');
fprintf(fid,'"Sample_Blade.dat"                  BldFile(3)  - Name of file containing properties for blade 3 (quoted string) [unused for 2 blades]\n');
fprintf(fid,'---------------------- AERODYN -------------------------------------------------\n');
fprintf(fid,'"Sample_AeroDyn.ipt"                ADFile      - Name of file containing AeroDyn input parameters (quoted string)\n');
fprintf(fid,'---------------------- NOISE ---------------------------------------------------\n');
fprintf(fid,'            NoiseFile   - Name of file containing aerodynamic noise input parameters (quoted string) [used only when CompNoise=True]\n');
fprintf(fid,'---------------------- ADAMS ---------------------------------------------------\n');
fprintf(fid,'"xxx.dat"          ADAMSFile   - Name of file containing ADAMS-specific input parameters (quoted string) [unused when ADAMSPrep=1]\n');
fprintf(fid,'---------------------- LINEARIZATION CONTROL -----------------------------------\n');
fprintf(fid,'"xxx.dat"                 LinFile     - Name of file containing FAST linearization parameters (quoted string) [unused when AnalMode=1]\n');
fprintf(fid,'---------------------- OUTPUT --------------------------------------------------\n');
fprintf(fid,'True        SumPrint    - Print summary data to "<RootName>.fsm" (flag)\n');
fprintf(fid,'1           OutFileFmt  - Format for tabular (time-marching) output file(s) (1: text file [<RootName>.out], 2: binary file [<RootName>.outb], 3: both) (switch)\n');
fprintf(fid,'True        TabDelim    - Use tab delimiters in text tabular output file? (flag)\n');
fprintf(fid,'"ES10.3E2"  OutFmt      - Format used for tabular output except time.  Resulting field should be 10 characters. (quoted string)  [not checked for validity!]\n');
fprintf(fid,'  30.0      TStart      - Time to begin tabular output (s)\n');
fprintf(fid,'   1        DecFact     - Decimation factor for tabular output {1: output every time step} (-)\n');
fprintf(fid,'   1.0      SttsTime    - Amount of time between screen status messages (sec)\n');
fprintf(fid,'  -3.09528  NcIMUxn     - Downwind distance from the tower-top to the nacelle IMU (meters)\n');
fprintf(fid,'   0.0      NcIMUyn     - Lateral  distance from the tower-top to the nacelle IMU (meters)\n');
fprintf(fid,'   2.23336  NcIMUzn     - Vertical distance from the tower-top to the nacelle IMU (meters)\n');
fprintf(fid,'   1.912    ShftGagL    - Distance from rotor apex [3 blades] or teeter pin [2 blades] to shaft strain gages [positive for upwind rotors] (meters)\n');
fprintf(fid,'   1        NTwGages    - Number of tower nodes that have strain gages for output [0 to 9] (-)\n');
fprintf(fid,'10          TwrGagNd    - List of tower nodes that have strain gages [1 to TwrNodes] (-) [unused if NTwGages=0]\n');
fprintf(fid,'   3        NBlGages    - Number of blade nodes that have strain gages for output [0 to 9] (-)\n');
fprintf(fid,' 5,9,13     BldGagNd    - List of blade nodes that have strain gages [1 to BldNodes] (-) [unused if NBlGages=0]\n');
fprintf(fid,'            OutList     - The next line(s) contains a list of output parameters.  See OutList.txt for a listing of available output channels, (-)\n');
fprintf(fid,'"WindVxi  , WindVyi  , WindVzi"                              - Longitudinal, lateral, and vertical wind speeds\n');
fprintf(fid,'"WaveElev"                                                   - Wave elevation at the platform reference point\n');
fprintf(fid,'"Wave1Vxi , Wave1Vyi , Wave1Vzi"                             - Longitudinal, lateral, and vertical wave particle velocities at platform node 1 (approx. platform reference point)\n');
fprintf(fid,'"Wave1Axi , Wave1Ayi , Wave1Azi"                             - Longitudinal, lateral, and vertical wave particle accelerations at platform node 1 (approx. platform reference point)\n');
fprintf(fid,'"GenPwr   , GenTq"                                           - Electrical generator power and torque\n');
fprintf(fid,'"HSSBrTq"                                                    - High-speed shaft brake torque\n');
fprintf(fid,'"BldPitch1, BldPitch2, BldPitch3"                            - Pitch angles for blades 1, 2, and 3\n');
fprintf(fid,'"Azimuth"                                                    - Blade 1 azimuth angle\n');
fprintf(fid,'"RotSpeed , GenSpeed"                                        - Low-speed shaft and high-speed shaft speeds\n');
fprintf(fid,'"NacYaw   , NacYawErr"                                       - Nacelle yaw angle and nacelle yaw error estimate\n');
fprintf(fid,'"OoPDefl1 , IPDefl1  , TwstDefl1"                            - Blade 1 out-of-plane and in-plane deflections and tip twist\n');
fprintf(fid,'"OoPDefl2 , IPDefl2  , TwstDefl2"                            - Blade 2 out-of-plane and in-plane deflections and tip twist\n');
fprintf(fid,'"OoPDefl3 , IPDefl3  , TwstDefl3"                            - Blade 3 out-of-plane and in-plane deflections and tip twist\n');
fprintf(fid,'"TwrClrnc1, TwrClrnc2, TwrClrnc3"                            - Tip-to-tower clearance estimate for blades 1, 2, and 3\n');
fprintf(fid,'"NcIMUTAxs, NcIMUTAys, NcIMUTAzs"                            - Nacelle IMU translational accelerations (absolute) in the nonrotating, shaft coordinate system\n');
fprintf(fid,'"TTDspFA  , TTDspSS  , TTDspTwst"                            - Tower fore-aft and side-to-side displacements and top twist\n');
fprintf(fid,'"PtfmSurge, PtfmSway , PtfmHeave"                            - Platform translational surge, sway, and heave displacements\n');
fprintf(fid,'"PtfmRoll , PtfmPitch, PtfmYaw"                              - Platform rotational roll, pitch and yaw displacements\n');
fprintf(fid,'"PtfmTAxt , PtfmTAyt , PtfmTAzt"                             - Platform translation accelerations (absolute) in the tower-base coordinate system\n');
fprintf(fid,'"RootFxc1 , RootFyc1 , RootFzc1"                             - Out-of-plane shear, in-plane shear, and axial forces at the root of blade 1\n');
fprintf(fid,'"RootMxc1 , RootMyc1 , RootMzc1"                             - In-plane bending, out-of-plane bending, and pitching moments at the root of blade 1\n');
fprintf(fid,'"RootFxc2 , RootFyc2 , RootFzc2"                             - Out-of-plane shear, in-plane shear, and axial forces at the root of blade 2\n');
fprintf(fid,'"RootMxc2 , RootMyc2 , RootMzc2"                             - In-plane bending, out-of-plane bending, and pitching moments at the root of blade 2\n');
fprintf(fid,'"RootFxc3 , RootFyc3 , RootFzc3"                             - Out-of-plane shear, in-plane shear, and axial forces at the root of blade 3\n');
fprintf(fid,'"RootMxc3 , RootMyc3 , RootMzc3"                             - In-plane bending, out-of-plane bending, and pitching moments at the root of blade 3\n');
fprintf(fid,'"Spn1MLxb1, Spn1MLyb1, Spn1MLzb1"                            - Blade 1 local edgewise bending, flapwise bending, and pitching moments at span station 1 (approx. 50% span)\n');
fprintf(fid,'"Spn1MLxb2, Spn1MLyb2, Spn1MLzb2"                            - Blade 2 local edgewise bending, flapwise bending, and pitching moments at span station 1 (approx. 50% span)\n');
fprintf(fid,'"Spn1MLxb3, Spn1MLyb3, Spn1MLzb3"                            - Blade 3 local edgewise bending, flapwise bending, and pitching moments at span station 1 (approx. 50% span)\n');
fprintf(fid,'"RotThrust, LSSGagFya, LSSGagFza"                            - Rotor thrust and low-speed shaft 0- and 90-rotating shear forces at the main bearing\n');
fprintf(fid,'"RotTorq  , LSSGagMya, LSSGagMza"                            - Rotor torque and low-speed shaft 0- and 90-rotating bending moments at the main bearing\n');
fprintf(fid,'"YawBrFxp , YawBrFyp , YawBrFzp"                             - Fore-aft shear, side-to-side shear, and vertical forces at the top of the tower (not rotating with nacelle yaw)\n');
fprintf(fid,'"YawBrMxp , YawBrMyp , YawBrMzp"                             - Side-to-side bending, fore-aft bending, and yaw moments at the top of the tower (not rotating with nacelle yaw)\n');
fprintf(fid,'"TwrBsFxt , TwrBsFyt , TwrBsFzt"                             - Fore-aft shear, side-to-side shear, and vertical forces at the base of the tower (platform)\n');
fprintf(fid,'"TwrBsMxt , TwrBsMyt , TwrBsMzt"                             - Side-to-side bending, fore-aft bending, and yaw moments at the base of the tower (platform)\n');
fprintf(fid,'"TwHt1MLxt, TwHt1MLyt, TwHt1MLzt"                            - Local side-to-side bending, fore-aft bending, and yaw moments at tower gage 1 (approx. 50% elevation)\n');
fprintf(fid,'"Fair1Ten , Fair1Ang , Anch1Ten , Anch1Ang"                  - Line 1 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair2Ten , Fair2Ang , Anch2Ten , Anch2Ang"                  - Line 2 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair3Ten , Fair3Ang , Anch3Ten , Anch3Ang"                  - Line 3 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair4Ten , Fair4Ang , Anch4Ten , Anch4Ang"                  - Line 4 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair5Ten , Fair5Ang , Anch5Ten , Anch5Ang"                  - Line 5 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair6Ten , Fair6Ang , Anch6Ten , Anch6Ang"                  - Line 6 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair7Ten , Fair7Ang , Anch7Ten , Anch7Ang"                  - Line 7 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"Fair8Ten , Fair8Ang , Anch8Ten , Anch8Ang"                  - Line 8 fairlead and anchor effective tensions and vertical angles\n');
fprintf(fid,'"TipSpdRat, RotCp    , RotCt    , RotCq"                     - Rotor tip speed ratio and power, thrust, and torque coefficients\n');
fprintf(fid,'"HSShftPwr, RotPwr"                                          - HSS Power and rotor power\n');
fprintf(fid,'"PtfmRVxi , PtfmRVyi , PtfmRVzi"                             - Platform roll, pitch, and yaw velocity\n');
fprintf(fid,'"LSSGagVxa, LSShftMxa, RootMyb1"                             - Measurements to be used to analysis\n');
fprintf(fid,'"YawBrRVyp"\n');
fprintf(fid,'END of FAST input file (the word "END" must appear in the first 3 columns of this last line).\n');
fprintf(fid,'--------------------------------------------------------------------------------\n');
fprintf(fid,'\n');
fprintf(fid,'\n');

%% close file
fclose(fid);
